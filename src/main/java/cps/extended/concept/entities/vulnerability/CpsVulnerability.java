/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cps.extended.concept.entities.vulnerability;

import java.util.List;
import javax.persistence.CascadeType;
import javax.persistence.Entity;
import javax.persistence.OneToMany;

/**
 * This class represents the CPS-CVE class (the complete vulnerability of a
 * system in a cps cyber threat
 *
 * @author tarnschaf
 */
@Entity(name = "cps_vulnerability")
public class CpsVulnerability extends AbstractVulnerability {

    @OneToMany(cascade = CascadeType.ALL, mappedBy = "cpsVulnerability")
    private List<CveCpsVulnerabilityMapping> cpsCveVulnerabilityMappings;

    @Override
    public int hashCode() {
        int hash = 0;
        hash += (id != null ? id.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof CpsVulnerability)) {
            return false;
        }
        CpsVulnerability other = (CpsVulnerability) object;
        if ((this.id == null && other.id != null) || (this.id != null && !this.id.equals(other.id))) {
            return false;
        }
        return true;
    }

    public List<CveCpsVulnerabilityMapping> getCpsCveVulnerabilityMappings() {
        return cpsCveVulnerabilityMappings;
    }

    public void setCpsCveVulnerabilityMappings(List<CveCpsVulnerabilityMapping> cpsCveVulnerabilityMappings) {
        this.cpsCveVulnerabilityMappings = cpsCveVulnerabilityMappings;
    }

    @Override
    public String toString() {
        return "cps.extended.concept.entities.vulnerability.CommonVulnerability[ id=" + id + " ]";
    }

}
