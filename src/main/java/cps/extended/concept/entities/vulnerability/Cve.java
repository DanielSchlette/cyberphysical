package cps.extended.concept.entities.vulnerability;

import cps.extended.concept.entities.asset.Cpe;
import cps.extended.concept.entities.asset.CyberPhysicalCpe;
import java.util.ArrayList;
import java.util.List;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;

/**
 * This entity representates a simple Cyber Vulnerability from the Common
 * Vulnerability Enumeration from The MITRE Corporation.
 *
 * @author tarnschaf
 */
@Entity(name = "cve")
public class Cve extends AbstractVulnerability {

    /**
     * External reference to CPE database, only to differ beetween MITRE data
     * and new data
     */
    @ManyToMany(cascade = {
        CascadeType.PERSIST,
        CascadeType.MERGE
    })
    @JoinTable(name = "cve_cpe",
            joinColumns = @JoinColumn(name = "cpe_id"),
            inverseJoinColumns = @JoinColumn(name = "cve_id")
    )
    private List<Cpe> cyberCpes = new ArrayList<>();

    @OneToMany(cascade = CascadeType.ALL, mappedBy = "cve")
    private List<CveCpsVulnerabilityMapping> cpsCveVulnerabilityMappings;

    /**
     * External reference to CPE database, only to differ beetween MITRE data
     * and new data
     */
    @ManyToMany(cascade = {
        CascadeType.PERSIST,
        CascadeType.MERGE
    })
    @JoinTable(name = "cve_cp_cpe",
            joinColumns = @JoinColumn(name = "cyber_physical_cpe_id"),
            inverseJoinColumns = @JoinColumn(name = "cyber_cve_id")
    )
    private List<CyberPhysicalCpe> cyberPhysicalCpes = new ArrayList<>();

    @Column(name = "source")
    private String source;

    public Cve() {
    }

    public void setCyberCpes(List<Cpe> cyberCpes) {
        this.cyberCpes = cyberCpes;
    }

    public List<Cpe> getCyberCpes() {
        return cyberCpes;
    }

    public List<CyberPhysicalCpe> getCyberPhysicalCpes() {
        return cyberPhysicalCpes;
    }

    public void setCyberPhysicalCpes(List<CyberPhysicalCpe> cyberPhysicalCpes) {
        this.cyberPhysicalCpes = cyberPhysicalCpes;
    }

    public List<CveCpsVulnerabilityMapping> getCpsCveVulnerabilityMappings() {
        return cpsCveVulnerabilityMappings;
    }

    public void setCpsCveVulnerabilityMappings(List<CveCpsVulnerabilityMapping> cpsCveVulnerabilityMappings) {
        this.cpsCveVulnerabilityMappings = cpsCveVulnerabilityMappings;
    }

    public String getSource() {
        return source;
    }

    public void setSource(String source) {
        this.source = source;
    }
}
