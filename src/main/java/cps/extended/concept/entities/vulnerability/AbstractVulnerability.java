/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cps.extended.concept.entities.vulnerability;

import java.io.Serializable;
import java.util.List;
import javax.persistence.Column;
import javax.persistence.ElementCollection;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.Lob;
import javax.persistence.MappedSuperclass;

/**
 * Abstract class for all types of vulnerabilities (CVE, CPS-CVE)
 *
 * @author tarnschaf
 */
@MappedSuperclass
@Inheritance(strategy = InheritanceType.TABLE_PER_CLASS)
public abstract class AbstractVulnerability implements Serializable {

    private static final long serialVersionUID = 1L;
    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    protected Long id;

    @Column(name = "cve_id")
    protected String cveId;

    // has to be at least big enough for large strings
    @Lob
    @Column(name = "description")
    protected String description;

    @Lob
    @Column(name = "date")
    protected String date;

    @Lob
    @Column(name = "urls")
    @ElementCollection(targetClass = String.class)
    private List<String> urls;

    public void setUrls(List<String> urls) {
        this.urls = urls;
    }

    public AbstractVulnerability() {
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getCveId() {
        return cveId;
    }

    public List<String> getUrls() {
        return urls;
    }

    public String getDate() {
        return date;
    }

    public void setDate(String date) {
        this.date = date;
    }

    public Long getId() {
        return id;
    }

    public void setCveId(String cveId) {
        this.cveId = cveId;
    }

    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    @Override
    public int hashCode() {
        int hash = 0;
        hash += (id != null ? id.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof AbstractVulnerability)) {
            return false;
        }
        AbstractVulnerability other = (AbstractVulnerability) object;
        if ((this.id == null && other.id != null) || (this.id != null && !this.id.equals(other.id))) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return "cps.extended.concept.entities.AbstractVulnerability[ id=" + id + " ]";
    }
}
